package ee.aktors.misp2;

import ee.aktors.misp2.util.TestFileUtil;
import org.apache.commons.io.FileUtils;
import org.junit.After;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.pagefactory.ByChained;

import java.io.File;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.TimeUnit;

import static org.junit.Assert.assertTrue;

public class Misp2OrbeonIT extends BaseUITest {

    @After
    public void resetTimeout() {
        driver.manage().timeouts().implicitlyWait(defaultImplicitWaitTimeout, TimeUnit.SECONDS);
    }

    /*
     * This test expects that Orbeon has been deployed besides the misp2
     * This can be done with deploy_orbeon.sh - script
     */
    @Test
    public void OrbeonFormRunCheck() throws Exception {
        String wsdlFilePath = TestFileUtil.getConfigPathForTest("xforms/6.wsdl");
        userLogin();
        driver.findElement(By.id("roleselect-button")).click();
        driver.findElement(By.cssSelector("#roleselect-menu > li:nth-child(3) > a:nth-child(1)")).click();
        driver.findElement(By.partialLinkText("CS : ORG : 1111 : Client")).click();
        driver.findElement(By.id("form_queries2_wsdlSourceFILE_UPLOAD")).click();
        driver.findElement(By.id("form_queries2_sourceFile")).sendKeys(wsdlFilePath);
        driver.findElement(By.id("updateServicesListBtn")).click();

        driver.manage().timeouts().implicitlyWait(defaultImplicitWaitTimeout, TimeUnit.SECONDS);
        Optional<WebElement> yesButton = driver.findElements(By.id("btnRemoveQueriesYes")).stream().findFirst();
        yesButton.ifPresent(WebElement::click);
        // select query and update it's  xform
        Optional<WebElement> checkbox = driver.findElements(By.tagName("tr")).stream()
                .filter(element ->
                        element.getText().contains("CS:ORG:1111:Client:checkJustification:v1"))
                .map(element -> element.findElement(By.className("checkbox")))
                .findFirst();
        assertTrue("checkJustification select checkbox not found", checkbox.isPresent());
        checkbox.ifPresent(WebElement::click);

        Optional<WebElement> generateServicesFormsBtn = driver.findElements(By.id("generateServicesFormsBtn")).stream().findFirst();
        assertTrue("Update Selected Service Froms button missing", generateServicesFormsBtn.isPresent());
        generateServicesFormsBtn.ifPresent(WebElement::click);

        driver.manage().timeouts().implicitlyWait(defaultImplicitWaitTimeout * 4, TimeUnit.SECONDS);

        ByChained refreshedNotifySelector = new ByChained(
                By.id("content"),
                By.className("ok"),
                By.tagName("h3")
        );

        assertTrue(
                "Result box after Service Froms Update should appear",
                textAppearsToElement(refreshedNotifySelector, "XForms refreshed")
        );

        // Run the query
        Optional<WebElement> runLink = driver.findElements(By.tagName("tr")).stream().filter(
                webElement -> webElement.getText()
                        .contains("CS:ORG:1111:Client:checkJustification:v1"))
                .map(webElement -> webElement.findElement(By.id("xforms_run_link"))).findFirst();
        assertTrue("Run Query button for  checkJustification missing", runLink.isPresent());
        runLink.ifPresent(WebElement::click);

        // Form gets visible
        Optional<WebElement> xformsForm = driver.findElements(By.id("xforms-form")).stream().findFirst();
        assertTrue("X-Forms form generated by Orbeon should be visible", xformsForm.isPresent());
    }

    private boolean textAppearsToElement(By elementSelector, String text) {
        Objects.requireNonNull(elementSelector);
        Objects.requireNonNull(text);
        final int MILLISECONDS_TO_SLEEP = 3000;
        for (int round = 0, maxWaitingRounds = 10; round < maxWaitingRounds; round++) {
            if (driver.findElements(elementSelector).stream()
                    .anyMatch(webElement -> webElement.getText().toLowerCase().contains(text.toLowerCase()))) {
                return true;
            }
            try {
                Thread.sleep(MILLISECONDS_TO_SLEEP);
            } catch (InterruptedException ignored) {
            }
        }
        return false;
    }

}
